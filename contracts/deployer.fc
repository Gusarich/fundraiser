#include "imports/stdlib.fc";
#include "constants.fc";

global slice data::admin;
global slice data::fee_receiver;
global int data::fee_percentage;
global cell data::fundraiser_code;
global cell data::helper_code;
global int data::index;
global cell data::jetton_wallet_code;
global cell data::collection_content;

global int context::op;
global int context::query_id;
global slice context::sender;

() load_data() impure {
    slice ds = get_data().begin_parse();
    data::admin = ds~load_msg_addr();
    data::fee_receiver = ds~load_msg_addr();
    data::fee_percentage = ds~load_uint(16);
    data::fundraiser_code = ds~load_ref();
    data::helper_code = ds~load_ref();
    data::index = ds~load_uint(64);
    data::jetton_wallet_code = ds~load_ref();
    data::collection_content = ds~load_ref();
}

() save_data() impure {
    set_data(begin_cell()
        .store_slice(data::admin)
        .store_slice(data::fee_receiver)
        .store_uint(data::fee_percentage, 16)
        .store_ref(data::fundraiser_code)
        .store_ref(data::helper_code)
        .store_uint(data::index, 64)
        .store_ref(data::jetton_wallet_code)
        .store_ref(data::collection_content)
    .end_cell());
}

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    if (in_msg_body.slice_bits() < 96) {
        return ();
    }

    context::op = in_msg_body~load_uint(32);
    context::query_id = in_msg_body~load_uint(64);
    (_, context::sender) = in_msg_full.begin_parse().skip_bits(4).load_msg_addr();

    load_data();

    if (context::op == op::update_settings) {
        if (in_msg_body~load_int(1)) {
            data::admin = in_msg_body~load_msg_addr();
        }
        if (in_msg_body~load_int(1)) {
            data::fee_receiver = in_msg_body~load_msg_addr();
        }
        if (in_msg_body~load_int(1)) {
            data::fee_percentage = in_msg_body~load_uint(16);
        }
        if (in_msg_body~load_int(1)) {
            data::fundraiser_code = in_msg_body~load_ref();
        }
        if (in_msg_body~load_int(1)) {
            data::helper_code = in_msg_body~load_ref();
        }
        if (in_msg_body~load_int(1)) {
            data::index = in_msg_body~load_uint(64);
        }
        if (in_msg_body~load_int(1)) {
            data::jetton_wallet_code = in_msg_body~load_ref();
        }
    }

    if (context::op == op::deploy_fundraiser) {
        int goal = in_msg_body~load_coins();
        int block_time = in_msg_body~load_uint(64);
        cell metadata_ipfs_link = in_msg_body~load_ref();
        slice priority_coin = in_msg_body~load_msg_addr();

        cell stateinit = begin_cell()
            .store_uint(0, 2)
            .store_dict(data::fundraiser_code)
            .store_dict(begin_cell()
                .store_slice(my_address())
                .store_uint(data::index, 64)
            .end_cell())
            .store_uint(0, 1)
        .end_cell();

        slice address = begin_cell()
            .store_uint(4, 3)
            .store_int(0, 8)
            .store_uint(cell_hash(stateinit), 256)
        .end_cell().begin_parse();

        send_raw_message(begin_cell()
            .store_uint(0x18, 6)
            .store_slice(address)
            .store_coins(0)
            .store_uint(6, 108)
            .store_ref(stateinit)
            .store_uint(op::deploy, 32)
            .store_uint(context::query_id, 64)
            .store_ref(begin_cell()
                .store_slice(context::sender)
                .store_coins(goal)
                .store_uint(0, 2)
                .store_uint(block_time, 64)
                .store_slice(priority_coin)
                .store_slice(my_address())
                .store_uint(data::index, 64)
                .store_ref(begin_cell()
                    .store_ref(metadata_ipfs_link)
                    .store_slice(data::fee_receiver)
                    .store_uint(data::fee_percentage, 16)
                    .store_ref(data::helper_code)
                    .store_ref(data::jetton_wallet_code)
                .end_cell())
            .end_cell())
        .end_cell(), 64);

        data::index += 1;
    }

    else {
        throw(0xffff);
    }

    save_data();
}

(int, cell, slice) get_collection_data() method_id {
    load_data();
    return (data::index, data::collection_content, data::admin);
}

(slice) get_nft_address_by_index(int index) method_id {
    load_data();

    cell stateinit = begin_cell()
        .store_uint(0, 2)
        .store_dict(data::fundraiser_code)
        .store_dict(begin_cell()
            .store_slice(my_address())
            .store_uint(index, 64)
        .end_cell())
        .store_uint(0, 1)
    .end_cell();

    slice address = begin_cell()
        .store_uint(4, 3)
        .store_int(0, 8)
        .store_uint(cell_hash(stateinit), 256)
    .end_cell().begin_parse();

    return address;
}

(cell) get_nft_content(int index, cell individual_content) method_id {
    return individual_content;
}
